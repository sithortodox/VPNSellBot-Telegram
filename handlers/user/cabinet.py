"""handlers.user.cabinet.py ‚Äî —Ö—ç–Ω–¥–ª–µ—Ä—ã —Ä–∞–∑–¥–µ–ª–∞ ¬´–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç¬ª.

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥–º–µ–Ω—é –∏ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç—Ä—ë—Ö –ø—É–Ω–∫—Ç–æ–≤:
  ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ / –ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥–∏
  ‚Ä¢ –ú–æ–π –±–∞–ª–∞–Ω—Å / –ü–æ–ø–æ–ª–Ω–∏—Ç—å
  ‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
"""
from aiogram import Router
from aiogram.types import CallbackQuery

from keyboards.user_kb import CallbackData, cabinet_menu_kb
from db.dao import get_balance

router = Router()

# -----------------------------------------------------------------------------
# –û—Ç–∫—Ä—ã—Ç—å –ø–æ–¥–º–µ–Ω—é ¬´–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç¬ª
# -----------------------------------------------------------------------------
@router.callback_query(lambda c: c.data == CallbackData.CABINET)
async def open_cabinet(callback: CallbackQuery) -> None:
    """–ó–∞–º–µ–Ω—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –ø–æ–¥–º–µ–Ω—é –∫–∞–±–∏–Ω–µ—Ç–∞."""
    await callback.message.edit_reply_markup(reply_markup=cabinet_menu_kb())
    await callback.answer()


# -----------------------------------------------------------------------------
# –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ / –ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥–∏ ‚Äî –∑–∞–≥–ª—É—à–∫–∞
# -----------------------------------------------------------------------------
@router.callback_query(lambda c: c.data == CallbackData.CABINET_HISTORY)
async def show_history(callback: CallbackQuery) -> None:
    await callback.answer("üìù –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –ø–æ–∫–∞ –ø—É—Å—Ç–∞.", show_alert=True)


# -----------------------------------------------------------------------------
# –ú–æ–π –±–∞–ª–∞–Ω—Å / –ü–æ–ø–æ–ª–Ω–∏—Ç—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ TBD
# -----------------------------------------------------------------------------
@router.callback_query(lambda c: c.data == CallbackData.CABINET_BALANCE)
async def show_balance_topup(callback: CallbackQuery) -> None:
    bal = await get_balance(callback.from_user.id)
    await callback.answer()
    await callback.message.answer(
        f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {bal}\n\n–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.")


# -----------------------------------------------------------------------------
# –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ‚Äî –∑–∞–≥–ª—É—à–∫–∞
# -----------------------------------------------------------------------------
@router.callback_query(lambda c: c.data == CallbackData.CABINET_REFERRAL)
async def show_referral(callback: CallbackQuery) -> None:
    await callback.answer("üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶", show_alert=True)


__all__ = ["router"]
